services:
  ### Keycloak conectado a PostgreSQL en AWS RDS
  keycloak:
    container_name: keycloak_sga
    image: quay.io/keycloak/keycloak:26.2.0
    command: [ "start-dev" ]
    ports:
      - "8181:8181"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://${KEYCLOAK_DB_HOST}:${KEYCLOAK_DB_PORT}/${KEYCLOAK_DB_NAME}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_DB_SCHEMA: ${KEYCLOAK_DB_SCHEMA}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HTTP_PORT: 8181
      KC_HOSTNAME: keycloak.local
    networks:
      - backend-network
    volumes:
      - keycloak_data_sga:/opt/keycloak/data

  eureka-server:
    build:
        context: .
        dockerfile: eureka-server/Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - backend-network
    environment:
      EUREKA_USERNAME: ${EUREKA_USERNAME}
      EUREKA_PASSWORD: ${EUREKA_PASSWORD}

  gateway:
    build:
        context: .
        dockerfile: gateway/Dockerfile
    container_name: gateway-sga
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
      - keycloak
    networks:
      - backend-network
    extra_hosts:
      - "keycloak:host-gateway"
    environment:
        EUREKA_USERNAME: ${EUREKA_USERNAME}
        EUREKA_PASSWORD: ${EUREKA_PASSWORD}
        KC_CLIENT_SECRET: ${KC_CLIENT_SECRET}
        SPRING_PROFILES_ACTIVE: docker

  modulorubricacriterio:
    build:
        context: .
        dockerfile: ModuloRubricaCriterio_Hexagonal/Dockerfile
    container_name: modulorubricacriterio
    ports:
      - "0:5001"
    depends_on:
      - eureka-server
      - gateway
      - mariadb
    environment:
      RUBRIC_DATASOURCE_URL: ${RUBRIC_DATASOURCE_URL}
      RUBRIC_DATASOURCE_USERNAME: ${RUBRIC_DATASOURCE_USERNAME}
      RUBRIC_DATASOURCE_PASSWORD: ${RUBRIC_DATASOURCE_PASSWORD}
      EUREKA_USERNAME: ${EUREKA_USERNAME}
      EUREKA_PASSWORD: ${EUREKA_PASSWORD}
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - backend-network

  evaluation-service:
    build:
      context: .
      dockerfile: evaluation-service/Dockerfile
    container_name: evaluation-service
    ports:
      - "5002:5002"
    depends_on:
      - eureka-server
      - mariadb
    environment:
      EVALUATION_DATASOURCE_URL: ${EVALUATION_DATASOURCE_URL}
      EVALUATION_DATASOURCE_USERNAME: ${EVALUATION_DATASOURCE_USERNAME}
      EVALUATION_DATASOURCE_PASSWORD: ${EVALUATION_DATASOURCE_PASSWORD}
      EUREKA_USERNAME: ${EUREKA_USERNAME}
      EUREKA_PASSWORD: ${EUREKA_PASSWORD}
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - backend-network

  helper-service:
    build:
      context: .
      dockerfile: helper-service/Dockerfile
    container_name: helper-service
    ports:
      - "5004:5004"
    depends_on:
      - eureka-server
      - helper_mariadb
      - evaluation-service
    environment:
      HELPER_DATASOURCE_URL: ${HELPER_DATASOURCE_URL}
      HELPER_DATASOURCE_USERNAME: ${HELPER_DATASOURCE_USERNAME}
      HELPER_DATASOURCE_PASSWORD: ${HELPER_DATASOURCE_PASSWORD}
      EUREKA_USERNAME: ${EUREKA_USERNAME}
      EUREKA_PASSWORD: ${EUREKA_PASSWORD}
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - backend-network

  mariadb:
    image: mariadb:10.5
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${EVALUATION_DATASOURCE_PASSWORD}
      MYSQL_DATABASE: ${EVALUATION_DATABASE_NAME}
    ports:
      - "3306:3306"
    networks:
      - backend-network

  helper_mariadb:
    image: mariadb:10.5
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${HELPER_DATASOURCE_PASSWORD}
      MYSQL_DATABASE: ${HELPER_DATABASE_NAME}
    ports:
      - "3308:3306"
    networks:
      - backend-network

  rabbit:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  keycloak_data_sga: